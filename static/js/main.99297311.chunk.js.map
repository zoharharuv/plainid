{"version":3,"sources":["assets/img/plainid-logo-white.png","cmps/AppHeader.jsx","assets/img/arrow-right.svg","assets/img/active.svg","cmps/resource-cmps/ResourcePreview.jsx","cmps/resource-cmps/ResourceList.jsx","assets/img/search.svg","cmps/resource-cmps/ResourceSearch.jsx","cmps/AppMenu.jsx","cmps/resource-cmps/resource-info-cmps/ResourceHeader.jsx","assets/img/help-12.svg","cmps/resource-cmps/resource-info-cmps/ResourceDetails.jsx","services/database.service.js","services/resource.service.js","services/action.service.js","cmps/resource-cmps/resource-info-cmps/ResourceActions.jsx","cmps/resource-cmps/ResourceInfo.jsx","services/utils.js","App.jsx","hooks/useUpdateEffect.js","index.js"],"names":["AppHeader","memo","className","src","logo","alt","ResourcePreview","resource","selectedResource","onSelectResource","isActive","id","onClick","active","name","arrow","ResourceList","resources","length","map","ResourceSearch","filterBy","handleChange","onChange","value","type","placeholder","autoComplete","search","AppMenu","isMenuShown","toggleMenu","ResourceHeader","headerInfo","description","ResourceDetails","help","Object","keys","key","idx","gDatabase","require","a","databaseService","query","filter","regex","RegExp","test","resourceService","getResources","getActions","actionIds","actions","find","action","resourceIdActionsMap","Map","size","set","actionService","getResourceIdActionsMap","ResourceActions","useState","setActions","useEffect","fetchActions","get","ResourceInfo","utilService","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","App","setResources","setSelectedResource","setFilterBy","setIsMenuShown","loadResources","res","debouncedloadResources","useCallback","ev","target","prev","selectedRes","fetchResources","cb","deps","isMounted","useRef","current","useUpdateEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99297311.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plainid-logo-white.4cd730df.png\";","import { memo } from 'react'\r\nimport logo from '../assets/img/plainid-logo-white.png'\r\n\r\nexport const AppHeader = memo(function _AppHeader() {\r\n    return (\r\n        <header className=\"app-header flex align-center\">\r\n            <img src={logo} alt=\"PlainId\" />\r\n            <h1>PlainID- Demo App</h1>\r\n        </header>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/arrow-right.a3e03923.svg\";","export default __webpack_public_path__ + \"static/media/active.2ed6ace1.svg\";","import arrow from '../../assets/img/arrow-right.svg'\r\nimport active from '../../assets/img/active.svg'\r\n\r\nexport function ResourcePreview({ resource, selectedResource, onSelectResource }) {\r\n    const isActive = resource.id === selectedResource?.id;\r\n    return (\r\n        <section className={`resource-preview flex align-center space-between ${isActive ? 'active' : ''}`}\r\n            onClick={() => onSelectResource(resource)}>\r\n            <div className=\"resource-title align-center flex\">\r\n                <img src={active} alt=\"active\" />\r\n                <span>{resource.name}</span>\r\n            </div>\r\n            <img src={arrow} alt=\"arrow\" />\r\n        </section>\r\n    )\r\n}","import { memo } from 'react';\r\nimport { ResourcePreview } from './ResourcePreview';\r\n\r\nexport const ResourceList = memo(function _ResourceList({ resources, selectedResource, onSelectResource }) {\r\n    return (\r\n        <section className=\"resource-list flex column\">\r\n            {resources.length ? resources.map(resource => <ResourcePreview\r\n                key={resource.id}\r\n                resource={resource}\r\n                selectedResource={selectedResource}\r\n                onSelectResource={onSelectResource} />)\r\n                : <h1>No resources found!</h1>}\r\n        </section>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/search.d3887993.svg\";","import { memo } from 'react'\r\nimport search from '../../assets/img/search.svg'\r\n\r\nexport const ResourceSearch = memo(function _ResourceSearch({ filterBy, handleChange }) {\r\n    return (\r\n        <section className=\"resource-search\">\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    onChange={handleChange}\r\n                    value={filterBy}\r\n                    type=\"text\"\r\n                    placeholder=\"Search Resource\"\r\n                    autoComplete=\"off\" />\r\n                <img src={search} alt=\"search\" />\r\n            </div>\r\n        </section>\r\n    )\r\n})","import { ResourceList } from \"./resource-cmps/ResourceList\";\r\nimport { ResourceSearch } from './resource-cmps/ResourceSearch';\r\nimport arrow from '../assets/img/arrow-right.svg'\r\nimport { memo } from \"react\";\r\n\r\nexport const AppMenu = memo(function _AppMenu({\r\n    isMenuShown,\r\n    toggleMenu,\r\n    resources,\r\n    selectedResource,\r\n    filterBy,\r\n    handleChange,\r\n    onSelectResource }) {\r\n    return (\r\n        <section className={`app-menu flex column ${isMenuShown ? 'open' : ''}`}>\r\n            <div className=\"app-menu-top flex column gap\">\r\n                <h1>My Resources</h1>\r\n                <ResourceSearch\r\n                    filterBy={filterBy}\r\n                    handleChange={handleChange} />\r\n            </div>\r\n            <ResourceList\r\n                resources={resources}\r\n                selectedResource={selectedResource}\r\n                onSelectResource={onSelectResource} />\r\n            <span className=\"toggle-btn\" onClick={toggleMenu}><img src={arrow} alt=\"arrow\" /></span>\r\n        </section>\r\n    )\r\n})","export function ResourceHeader({ headerInfo }) {\r\n    return (\r\n        <section className=\"resource-header padding15\" >\r\n            <h1>{headerInfo.name}</h1>\r\n            <p>{headerInfo.description}</p>\r\n        </section>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/help-12.a3d4cef2.svg\";","import { Fragment } from 'react'\r\nimport help from '../../../assets/img/help-12.svg'\r\n\r\nexport function ResourceDetails({ resource }) {\r\n    return (\r\n        <section className=\"resource-details flex column card\" >\r\n            <div className=\"card-title flex align-center\">\r\n                <span>\r\n                    General Details\r\n                </span>\r\n                <img src={help} alt=\"help\" />\r\n            </div>\r\n\r\n            <div className=\"card-info flex column\">\r\n                {// eslint-disable-next-line\r\n                Object.keys(resource).map((key, idx) => {\r\n                    if (key !== 'id' && key !== 'actionIds') {\r\n                        return (\r\n                            <Fragment key={idx}>\r\n                                <span className=\"details-info-label\">\r\n                                    {key === 'resourceType' ? 'resource type' : key}\r\n                                </span>\r\n                                <p className=\"card-row\">\r\n                                    {resource[key]}\r\n                                </p>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}\r\n","const gDatabase = require('../data/data.json');\r\n\r\nasync function query(){\r\n    return gDatabase\r\n}\r\n\r\nexport const databaseService = {\r\n    query\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getResources(filter = null) {\r\n    const { resources } = await databaseService.query()\r\n    if (!filter) return resources;\r\n    const regex = new RegExp(filter, 'i');\r\n    return resources.filter(resource => regex.test(resource.name));\r\n}\r\n\r\n\r\nexport const resourceService = {\r\n    getResources\r\n}\r\n","import { databaseService } from './database.service';\r\nimport { resourceService } from './resource.service';\r\n\r\nasync function getActions(actionIds) {\r\n    const { actions } = await databaseService.query()\r\n    return actionIds.map(id => actions.find(action => action.id === id))\r\n}\r\n\r\nconst resourceIdActionsMap = new Map();\r\n\r\nasync function getResourceIdActionsMap() {\r\n    if (!resourceIdActionsMap.size) {\r\n        const resources = await resourceService.getResources()\r\n        for (const resource of resources) {\r\n            const actions = await getActions(resource.actionIds)\r\n            resourceIdActionsMap.set(resource.id, actions)\r\n        }\r\n    }\r\n    return resourceIdActionsMap\r\n}\r\n\r\n\r\nexport const actionService = {\r\n    getResourceIdActionsMap,\r\n    getActions\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { actionService } from '../../../services/action.service';\r\nimport help from '../../../assets/img/help-12.svg'\r\n\r\nexport function ResourceActions({ resource }) {\r\n    const [actions, setActions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchActions = async () => {\r\n            const map = await actionService.getResourceIdActionsMap()\r\n            const actions = map.get(resource.id)\r\n            setActions(actions)\r\n        }\r\n        fetchActions()\r\n    }, [resource.id]);\r\n\r\n    return (\r\n        <section className=\"resource-actions flex column card\" >\r\n            <div className=\"card-title flex align-center\">\r\n                <span>\r\n                    Permitted Actions\r\n                </span>\r\n                <img src={help} alt=\"help\" />\r\n            </div>\r\n            <div className=\"card-info flex column\">\r\n                {actions?.length && actions?.map(action =>\r\n                    <p key={action.id} className=\"card-row\">\r\n                        {action.name}\r\n                    </p>)}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { memo } from 'react';\r\nimport { ResourceHeader } from './resource-info-cmps/ResourceHeader';\r\nimport { ResourceDetails } from './resource-info-cmps/ResourceDetails';\r\nimport { ResourceActions } from './resource-info-cmps/ResourceActions';\r\n\r\nexport const ResourceInfo = memo(function _ResourceInfo({ resource }) {\r\n  return (\r\n    <section className=\"resource-info\" >\r\n      <div className=\"resource-container flex column\">\r\n        <ResourceHeader headerInfo={{ name: resource.name, description: resource.description }} />\r\n        <div className=\"resource-inner-container flex\">\r\n          <ResourceDetails resource={resource} />\r\n          <ResourceActions resource={resource} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n})\r\n","function debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function () {\r\n\t\tconst context = this, args = arguments,\r\n\t\t\tlater = function () {\r\n\t\t\t\ttimeout = null;\r\n\t\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t\t};\r\n\t\tconst callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n\r\nexport const utilService = {\r\n\tdebounce\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { AppMenu } from './cmps/AppMenu';\r\nimport { ResourceInfo } from './cmps/resource-cmps/ResourceInfo';\r\n\r\nimport { resourceService } from './services/resource.service';\r\nimport { utilService } from './services/utils';\r\n\r\nimport { useUpdateEffect } from './hooks/useUpdateEffect';\r\n\r\nexport function App() {\r\n  const [resources, setResources] = useState([]);\r\n  const [selectedResource, setSelectedResource] = useState(null);\r\n  const [filterBy, setFilterBy] = useState('');\r\n  const [isMenuShown, setIsMenuShown] = useState(false);\r\n\r\n  const loadResources = async (filterBy = '') => {\r\n    const res = await resourceService.getResources(filterBy);\r\n    setResources(res);\r\n    return res\r\n  }\r\n\r\n  // eslint-disable-next-line\r\n  const debouncedloadResources = useCallback(utilService.debounce(loadResources, 250), []);\r\n\r\n  const handleChange = useCallback((ev) => {\r\n    const filter = ev.target.value;\r\n    setFilterBy(filter);\r\n    // eslint-disable-next-line\r\n  }, [filterBy])\r\n\r\n  const onSelectResource = (resource) => {\r\n    setSelectedResource(resource);\r\n  }\r\n\r\n  const toggleMenu = useCallback(() => {\r\n    setIsMenuShown(prev => !prev);\r\n  }, [setIsMenuShown])\r\n\r\n  useEffect(() => {\r\n    async function fetchResources() {\r\n      const [selectedRes] = await loadResources();\r\n      onSelectResource(selectedRes);\r\n    }\r\n    fetchResources();\r\n  }, []);\r\n\r\n  useUpdateEffect(() => {\r\n    debouncedloadResources(filterBy)\r\n  }, [filterBy])\r\n\r\n  return (\r\n    <section className=\"app flex column\">\r\n      <AppHeader />\r\n      <main className=\"app-content flex grow\">\r\n        <AppMenu\r\n          isMenuShown={isMenuShown}\r\n          toggleMenu={toggleMenu}\r\n          resources={resources}\r\n          selectedResource={selectedResource}\r\n          filterBy={filterBy}\r\n          handleChange={handleChange}\r\n          onSelectResource={onSelectResource} />\r\n        {selectedResource &&\r\n          <ResourceInfo resource={selectedResource} />\r\n        }\r\n      </main>\r\n    </section>\r\n  )\r\n}\r\n\r\n","import { useEffect, useRef } from \"react\"\r\n\r\nexport const useUpdateEffect = (cb, deps) => {\r\n    const isMounted = useRef(false)\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            cb()\r\n        } else {\r\n            isMounted.current = true\r\n        }\r\n        // eslint-disable-next-line\r\n    }, deps)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App.jsx';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}